name: Backend CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  testing:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Create Firebase credentials for CI
      run: |
        echo '{
          "type": "service_account",
          "project_id": "test-project-ci",
          "private_key_id": "test-key-id",
          "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC7VJTUt9Us8cKB\nwOlT3SD6q6EXTmw2F2uIER4ekR02d8TiwFY/4kBNtNGDZQhYKuKHpqKEBCjQTCEA\nBhM5NuMVbOTMzQpJf1A6u+cqB9LA8gDaQAECgYEAuLZ2lHTGCEh9s+hQmMfbxVr\n-----END PRIVATE KEY-----\n",
          "client_email": "test@test-project-ci.iam.gserviceaccount.com",
          "client_id": "123456789012345678901",
          "auth_uri": "https://accounts.google.com/o/oauth2/auth",
          "token_uri": "https://oauth2.googleapis.com/token",
          "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
          "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/test%40test-project-ci.iam.gserviceaccount.com"
        }' > firebase_service_account.json

    - name: Run tests
      run: python manage.py test
      env:
        DJANGO_SETTINGS_MODULE: rental_backend.settings

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Deploy to VPS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /var/www/infinia-pms/backend
          git pull
          cd /var/www/infinia-pms/config
          docker-compose up -d --build backend