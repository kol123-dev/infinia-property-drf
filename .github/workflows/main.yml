name: Backend CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Run tests
      run: python manage.py test
      env:
        DJANGO_SETTINGS_MODULE: rental_backend.settings

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Deploy to VPS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /var/www/infinia-pms/backend
          
          # Clean up any local changes and cache files
          git reset --hard HEAD
          git clean -fd
          
          # Remove Python cache files
          find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
          find . -name "*.pyc" -delete 2>/dev/null || true
          
          # Stash any remaining local changes
          git stash
          
          # Pull latest changes
          git pull origin main
          
          # Navigate to docker-compose directory
          cd /var/www/infinia-pms/config
          
          # Stop existing containers
          docker-compose down
          
          # Remove any orphaned containers and networks
          docker system prune -f
          
          # Build and start containers
          docker-compose up -d --build --force-recreate backend
          
          # Show container status
          docker-compose ps